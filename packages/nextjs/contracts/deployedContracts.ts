/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  10143: {
    MonadRunnerGame: {
      address: "0xb59916B6C83982609329a22923b54EB4FbC31EF9",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "PlayerRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "ReplayDataStored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "ScoreSubmitted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "eoa",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "smartAccount",
              type: "address",
            },
          ],
          name: "SmartAccountRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newUsername",
              type: "string",
            },
          ],
          name: "UsernameChanged",
          type: "event",
        },
        {
          inputs: [],
          name: "MAX_LEADERBOARD_SIZE",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_PLAYER_SCORE_HISTORY",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_USERNAME_LENGTH",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
          ],
          name: "getPlayer",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "highScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timesPlayed",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastPlayed",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "exists",
                  type: "bool",
                },
              ],
              internalType: "struct MonadRunnerGame.Player",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getPlayerCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
          ],
          name: "getPlayerRank",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
          ],
          name: "getPlayerScoreHistory",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "replayHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct MonadRunnerGame.GameScore[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "getTopScores",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "replayHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct MonadRunnerGame.GameScore[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "playerAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "playerScoreHistory",
          outputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "players",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "highScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timesPlayed",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastPlayed",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "registerPlayer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "smartAccount",
              type: "address",
            },
          ],
          name: "registerSmartAccount",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "replayExists",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "smartAccounts",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "storeReplayDataHash",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "submitScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "topScores",
          outputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "newUsername",
              type: "string",
            },
          ],
          name: "updateUsername",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  31337: {
    MonadRunnerGame: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "PlayerRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "ReplayDataStored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "ScoreSubmitted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "eoa",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "smartAccount",
              type: "address",
            },
          ],
          name: "SmartAccountRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newUsername",
              type: "string",
            },
          ],
          name: "UsernameChanged",
          type: "event",
        },
        {
          inputs: [],
          name: "MAX_LEADERBOARD_SIZE",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_PLAYER_SCORE_HISTORY",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_USERNAME_LENGTH",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
          ],
          name: "getPlayer",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "username",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "highScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timesPlayed",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "lastPlayed",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "exists",
                  type: "bool",
                },
              ],
              internalType: "struct MonadRunnerGame.Player",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getPlayerCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
          ],
          name: "getPlayerRank",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
          ],
          name: "getPlayerScoreHistory",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "replayHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct MonadRunnerGame.GameScore[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          name: "getTopScores",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "playerAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "replayHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct MonadRunnerGame.GameScore[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "playerAddresses",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "playerScoreHistory",
          outputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "players",
          outputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "highScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timesPlayed",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "lastPlayed",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "username",
              type: "string",
            },
          ],
          name: "registerPlayer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "smartAccount",
              type: "address",
            },
          ],
          name: "registerSmartAccount",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "replayExists",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "smartAccounts",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "storeReplayDataHash",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          name: "submitScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "topScores",
          outputs: [
            {
              internalType: "address",
              name: "playerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "replayHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "newUsername",
              type: "string",
            },
          ],
          name: "updateUsername",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
